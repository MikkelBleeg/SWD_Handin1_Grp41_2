[
  {
    "Id": "452244",
    "ThreadId": "215128",
    "Html": "I built a very simple &quot;adapter class&quot; that allows you to use enum values instead of a strings when working with Messenger objects. Thought I'd pass it along in case anyone might find it useful.\r\n<br>\r\n<br>Here's the class:\r\n<br>\r\n<br>&nbsp;&nbsp;&nbsp;&nbsp;public class MessengerAdapter&lt;TEnum&gt;\r\n<br>&nbsp;&nbsp;&nbsp;&nbsp;{\r\n<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;private readonly Messenger _messenger = new Messenger();\r\n<br>\r\n<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public void NotifyColleagues(TEnum messageKey)\r\n<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\r\n<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_messenger.NotifyColleagues(messageKey.ToString());\r\n<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n<br>\r\n<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public void NotifyColleagues(TEnum messageKey, object value)\r\n<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\r\n<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_messenger.NotifyColleagues(messageKey.ToString(), value);\r\n<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n<br>\r\n<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public void Register(TEnum messageKey, Action callback)\r\n<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\r\n<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_messenger.Register(messageKey.ToString(), callback);\r\n<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n<br>\r\n<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public void Register&lt;T&gt;(TEnum messageKey, Action&lt;T&gt; callback)\r\n<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\r\n<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_messenger.Register&lt;T&gt;(messageKey.ToString(), callback);\r\n<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n<br>&nbsp;&nbsp;&nbsp;&nbsp;}\r\n<br>\r\n<br>--------------------------------------------\r\n<br>\r\n<br>Example usage:\r\n<br>\r\n<br>----- messenger instantiation (in App.xaml.cs) -----\r\n<br>\r\n<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;private readonly static MessengerAdapter&lt;MessengerCommands&gt; _messenger = new MessengerAdapter&lt;MessengerCommands&gt;();\r\n<br>\r\n<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;internal static MessengerAdapter&lt;MessengerCommands&gt; Messenger\r\n<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\r\n<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;get { return _messenger; }\r\n<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n<br>\r\n<br>----- enum declaration -----\r\n<br>\r\n<br>&nbsp;&nbsp;&nbsp;&nbsp;public enum MessengerCommands\r\n<br>&nbsp;&nbsp;&nbsp;&nbsp;{\r\n<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MapClicked,\r\n<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SelectedCityChanged,\r\n<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SelectedRouteChanged\r\n<br>&nbsp;&nbsp;&nbsp;&nbsp;}\r\n<br>\r\n<br>----- NotifyColleagues -----\r\n<br>\r\n<br>&nbsp;&nbsp;&nbsp;&nbsp;public Route SelectedRoute\r\n<br>&nbsp;&nbsp;&nbsp;&nbsp;{\r\n<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;get { return _selectedRoute; }\r\n<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;set\r\n<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\r\n<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (value == _selectedRoute) return;\r\n<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_selectedRoute = value;\r\n<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;RaisePropertyChanged(&quot;SelectedRoute&quot;);\r\n<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;App.Messenger.NotifyColleagues(MessengerCommands.SelectedRouteChanged, _selectedRoute);\r\n<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n<br>&nbsp;&nbsp;&nbsp;&nbsp;}\r\n<br>\r\n<br>----- Register -----\r\n<br>\r\n<br>&nbsp;&nbsp;&nbsp;&nbsp;App.Messenger.Register&lt;Route&gt;(\r\n<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MessengerCommands.SelectedRouteChanged,\r\n<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;route =&gt; FilterWaypoints(route));\r\n<br>\r\n<br>--------------------------------------------\r\n<br>\r\n<br>Some advantages I've noticed of using this adapter versus the original Messenger:\r\n<br>\r\n<br>1. If you mistype the message key, you will receive a compile-time error, so you can immediate catch and easily correct any mistakes.\r\n<br>2. By requiring that you specify the enum you'd like to use for a particular MessengerAdapter, the available keys for a particular messenger are enforced.\r\n<br>3. You can use Visual Studio's &quot;Find All References&quot; feature to find all the places in your code where a particular message key was used (useful for determining if a message has both a sender and a receiver).\r\n<br>4. Admittedly, you could always create a class with a bunch of string constants, but I would argue that enums are a more elegant solution for several reasons:\r\n<br>&nbsp;&nbsp; - With constants, you quickly realize the value of the constant has no meaning whatsoever. It just needs to be unique (in my case, it was always the same as the name of the constant). So, why not use an enum, which handles the assignment of unique values to names automatically?\r\n<br>&nbsp;&nbsp; - Enums, because of their familiarity, are a better way to express the intent of your code than a class with string constants.\r\n<br>&nbsp;&nbsp; - Using enums requires less typing.\r\n<br>&nbsp;&nbsp; - Enums are easier to maintain. Namely, if you change the name of one of your message keys, you don't have to also change the corresponding string value (assuming your string values have some relationship to your names).",
    "PostedDate": "2010-06-06T16:01:28.233-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]
[
  {
    "Id": "213277",
    "ThreadId": "62830",
    "Html": "<p>Great stuff Josh. Just whats MVVMers needed.</p>\r\n<p>Why is the IDisposable interface not implemented in the ObservableObject abstract class. Is it more efficient to implement it in a derived class,&nbsp; Or is there another reason?</p>\r\n<p>Thanks. Dan</p>",
    "PostedDate": "2009-07-17T18:53:03.847-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "213284",
    "ThreadId": "62830",
    "Html": "<p>An ObservableObject has nothing to dispose of, so there's no way, in my mind, to justify having it implement IDisposable.</p>\r\n<p>Thanks,</p>\r\n<p>Josh</p>",
    "PostedDate": "2009-07-17T20:02:55.253-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "213301",
    "ThreadId": "62830",
    "Html": "<p>Thanks Josh.</p>\r\n<p>The ViewModelBase class from your MVVM MSDN article uses the IDisposable but i see now that its probably to dispose the DisplayName string property. Thanks. Another stupid question from your great MSDN article/project.</p>\r\n<p>If your were to build that project again using these new classes what would you do differently ?</p>",
    "PostedDate": "2009-07-17T22:28:38.783-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "213302",
    "ThreadId": "62830",
    "Html": "<p>ViewModelBase in my MSDN Magazine article implemented IDisposable because I needed a standard place for ViewModel objects to unhook events of other objects before they were released, and thus made eligible for garbage collection. &nbsp;That was application-specific, and in a general purpose library, such an arbitrary interface implementation does not make sense (to me).</p>\r\n<p>If I were to build that project again, I think I'd use Messenger to alert the AllCustomersViewModel that a new customer was added to the repository, instead of hooking a CustomerAdded event. &nbsp;In fact, had I done that, there wouldn't have been a need to implement IDisposable on the ViewModelBase because then I wouldn't have needed to unhook that event when the AllCustomersView was closed.</p>",
    "PostedDate": "2009-07-17T22:33:31.883-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "213304",
    "ThreadId": "62830",
    "Html": "<p>Thanks Again</p>\r\n<p>I feel dumb :)&nbsp; I see the purpose of IDisposable now. Thanks. I need to dig into this Messenger and PropertyObserver class. I just cant keep up with all your great contributions.</p>\r\n<p>Feel free to delete this Discussion. Your library does not need discussion contributions from me:)</p>",
    "PostedDate": "2009-07-17T22:56:12.287-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "213305",
    "ThreadId": "62830",
    "Html": "<p>No worries! &nbsp;I am not going to delete this discussion, I think it has value. &nbsp;It made me rethink the design of my MSDN demo app. &nbsp;Thanks for your feedback. &nbsp;:)</p>",
    "PostedDate": "2009-07-17T23:02:58.31-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]
{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "I am not going to add support for this scenario in Messenger.  The client code can, if necessary, pass the originator of the message broadcast as the message&#39;s parameter &#40;or a sub-object of the parameter object&#41; and use that value to prevent infinite recursion.",
    "ClosedDate": "2009-08-23T10:30:37.5-07:00",
    "CommentCount": 0,
    "Custom": null,
    "Description": "Currently the Messenger just fires all delegates inside its map. This is a very good idea, however you can run into trouble when two view models listen and update the same messages. This can end up in infinite recursion and create a stack overflow.",
    "LastUpdatedDate": "2013-05-16T03:45:10.737-07:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Low",
      "Severity": 50,
      "Id": 1
    },
    "ProjectName": "mvvmfoundation",
    "ReportedDate": "2009-07-29T08:35:29.39-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "Unassigned"
    },
    "Summary": "Tracking the Source of a Message inside of Messenger",
    "Type": {
      "Name": "Issue",
      "Id": 3
    },
    "VoteCount": 1,
    "Id": 5257
  },
  "FileAttachments": [],
  "Comments": []
}